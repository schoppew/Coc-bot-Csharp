<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlertWhenBaseFound" xml:space="preserve">
    <value>Alert when Base found</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>A Clash of Clans Bot for the masses...</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Clash of Clans Bot</value>
  </data>
  <data name="Archers" xml:space="preserve">
    <value>Archers</value>
  </data>
  <data name="AttackAllBases" xml:space="preserve">
    <value>Attack All Bases</value>
  </data>
  <data name="AttackDeadBases" xml:space="preserve">
    <value>Attack Dead Bases</value>
  </data>
  <data name="AttackMode" xml:space="preserve">
    <value>Attack Mode</value>
  </data>
  <data name="AttackSettings" xml:space="preserve">
    <value>Attack</value>
  </data>
  <data name="AttackTheirKing" xml:space="preserve">
    <value>Attack King</value>
  </data>
  <data name="AttackTheirQueen" xml:space="preserve">
    <value>Attack Queen</value>
  </data>
  <data name="AttackTownhall" xml:space="preserve">
    <value>Attack Townhall (outside)</value>
  </data>
  <data name="AttackUsingClanCastle" xml:space="preserve">
    <value>Attack using Clan Castle troops if available</value>
  </data>
  <data name="AttackWeakBases" xml:space="preserve">
    <value>Attack Weak Bases</value>
  </data>
  <data name="Barbarians" xml:space="preserve">
    <value>Barbarians</value>
  </data>
  <data name="Barracks" xml:space="preserve">
    <value>Barracks</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Conditions</value>
  </data>
  <data name="ConditionsMessage" xml:space="preserve">
    <value>Check the boxes that you want to meet. The bot will stop at a base when it meets the conditions. If all unchecked, bot will stop if gold or elixir are met.</value>
  </data>
  <data name="Controls" xml:space="preserve">
    <value>Controls</value>
  </data>
  <data name="DeploySettings" xml:space="preserve">
    <value>Deploy Settings</value>
  </data>
  <data name="DeployStrategyFourSides" xml:space="preserve">
    <value>Attack on all sides equally, gets most of outer base</value>
  </data>
  <data name="DeployStrategyThreeSides" xml:space="preserve">
    <value>Attack on three sides, gets outer and some inside of base</value>
  </data>
  <data name="DeployStrategyTwoSides" xml:space="preserve">
    <value>Attack on two sides, penetrates through base</value>
  </data>
  <data name="DeployTroopsBarbariansAndArchers" xml:space="preserve">
    <value>Barbarians + Archers</value>
  </data>
  <data name="DeployTroopsUseAllTroops" xml:space="preserve">
    <value>Use all troops</value>
  </data>
  <data name="DonateArchers" xml:space="preserve">
    <value>Donate Archers</value>
  </data>
  <data name="DonateBarbarians" xml:space="preserve">
    <value>Donate Barbarians</value>
  </data>
  <data name="DonateGiants" xml:space="preserve">
    <value>Donate Giants</value>
  </data>
  <data name="DonateSettings" xml:space="preserve">
    <value>Donate</value>
  </data>
  <data name="DonateToAll" xml:space="preserve">
    <value>Donate to All</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Giants" xml:space="preserve">
    <value>Giants</value>
  </data>
  <data name="Goblins" xml:space="preserve">
    <value>Goblins</value>
  </data>
  <data name="Factors" xml:space="preserve">
    <value>Factors</value>
  </data>
  <data name="Barrack2" xml:space="preserve">
    <value>Barrack 2</value>
  </data>
  <data name="Barrack3" xml:space="preserve">
    <value>Barrack 3</value>
  </data>
  <data name="Barrack4" xml:space="preserve">
    <value>Barrack 4</value>
  </data>
  <data name="LabelKingSettings" xml:space="preserve">
    <value>King Settings:</value>
  </data>
  <data name="LabelMaxArcherTowerLevel" xml:space="preserve">
    <value>Archer:</value>
  </data>
  <data name="LabelMaxCannonLevel" xml:space="preserve">
    <value>Cannon:</value>
  </data>
  <data name="LabelMaxMortarLevel" xml:space="preserve">
    <value>Mortar:</value>
  </data>
  <data name="LabelMaxTrophies" xml:space="preserve">
    <value>Max Trophies:</value>
  </data>
  <data name="LabelMaxWizardTowerLevel" xml:space="preserve">
    <value>Wizard:</value>
  </data>
  <data name="LabelMaxXbowLevel" xml:space="preserve">
    <value>Xbow:</value>
  </data>
  <data name="LabelMinimumDarkElixir" xml:space="preserve">
    <value>Min. Dark Elixir:</value>
  </data>
  <data name="LabelMinimumElixir" xml:space="preserve">
    <value>Min. Elixir:</value>
  </data>
  <data name="LabelMinimumGold" xml:space="preserve">
    <value>Min. Gold:</value>
  </data>
  <data name="LabelMinimumTrophyCount" xml:space="preserve">
    <value>Min. Trophy Count:</value>
  </data>
  <data name="LabelQueenSettings" xml:space="preserve">
    <value>Queen Settings:</value>
  </data>
  <data name="LabelRequestFor" xml:space="preserve">
    <value>Request for:</value>
  </data>
  <data name="LocateBarracksManually" xml:space="preserve">
    <value>Locate Barracks Manually</value>
  </data>
  <data name="LocateClanCastleManually" xml:space="preserve">
    <value>Locate Clan Castle Manually</value>
  </data>
  <data name="LocateCollectorsManually" xml:space="preserve">
    <value>Locate Collectors Manually</value>
  </data>
  <data name="MeetDarkElixir" xml:space="preserve">
    <value>Meet Dark Elixir</value>
  </data>
  <data name="MeetElixir" xml:space="preserve">
    <value>Meet Elixir</value>
  </data>
  <data name="MeetGold" xml:space="preserve">
    <value>Meet Gold</value>
  </data>
  <data name="MeetTrophyCount" xml:space="preserve">
    <value>Meet Trophy Count</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="OptionAllBases" xml:space="preserve">
    <value>All Bases - Attack all that meets search</value>
  </data>
  <data name="OptionDeadBases" xml:space="preserve">
    <value>Dead Bases - Meets condition, full collectors</value>
  </data>
  <data name="OptionWeakBases" xml:space="preserve">
    <value>Weak Bases - Meets condition and able 50%</value>
  </data>
  <data name="OtherSearchSettings" xml:space="preserve">
    <value>Other Search Settings</value>
  </data>
  <data name="OtherSettings" xml:space="preserve">
    <value>Other Settings</value>
  </data>
  <data name="DarkBarracks" xml:space="preserve">
    <value>Dark Barracks</value>
  </data>
  <data name="OtherTroopsSettings" xml:space="preserve">
    <value>Other Troops Settings</value>
  </data>
  <data name="ResourcesMessage" xml:space="preserve">
    <value>Bot will stop when a base is found with resources higher or equal to the minimum resources.</value>
  </data>
  <data name="RoyalsAndClanCastleSettings" xml:space="preserve">
    <value>Royals and Clan Castle Settings</value>
  </data>
  <data name="SearchMode" xml:space="preserve">
    <value>Execute Bot in Search Mode Only</value>
  </data>
  <data name="SearchSettings" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Troops" xml:space="preserve">
    <value>Troops</value>
  </data>
  <data name="TroopSettings" xml:space="preserve">
    <value>Train</value>
  </data>
  <data name="TroopsMessage" xml:space="preserve">
    <value>Bot will use this if custom troops is selected. Troop Capacity must match!</value>
  </data>
  <data name="TrophySettings" xml:space="preserve">
    <value>Trophy Settings</value>
  </data>
  <data name="WallBreakers" xml:space="preserve">
    <value>Wall Breakers</value>
  </data>
  <data name="WeakBaseSettings" xml:space="preserve">
    <value>Weak Base Settings</value>
  </data>
  <data name="WeakBaseSettingsMessage" xml:space="preserve">
    <value>Bot will attack bases that meet requirement.</value>
  </data>
  <data name="Wizards" xml:space="preserve">
    <value>Wizards</value>
  </data>
  <data name="MaxLevel" xml:space="preserve">
    <value>Max Level</value>
  </data>
  <data name="Balloons" xml:space="preserve">
    <value>Balloons</value>
  </data>
  <data name="Barching" xml:space="preserve">
    <value>Barching</value>
  </data>
  <data name="CustomTroops" xml:space="preserve">
    <value>Custom Troops</value>
  </data>
  <data name="Dragons" xml:space="preserve">
    <value>Dragons</value>
  </data>
  <data name="Healers" xml:space="preserve">
    <value>Healers</value>
  </data>
  <data name="Pekkas" xml:space="preserve">
    <value>P.E.K.K.As</value>
  </data>
  <data name="UseBarracks" xml:space="preserve">
    <value>Use Barracks</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HogRider" xml:space="preserve">
    <value>Hog Rider</value>
  </data>
  <data name="LabelMaximumTownhallLevel" xml:space="preserve">
    <value>Max. Townhall level:</value>
  </data>
  <data name="LavaHound" xml:space="preserve">
    <value>Lava Hound</value>
  </data>
  <data name="MeetTownhallLevel" xml:space="preserve">
    <value>Meet Townhall Level</value>
  </data>
  <data name="Pekka" xml:space="preserve">
    <value>P.E.K.K.A</value>
  </data>
  <data name="WallBreaker" xml:space="preserve">
    <value>Wall Breaker</value>
  </data>
  <data name="DarkTroops" xml:space="preserve">
    <value>Dark Troops</value>
  </data>
  <data name="DonateMessage" xml:space="preserve">
    <value>Bot will donate the checked troops according to the specified keywords.</value>
  </data>
  <data name="Tier1" xml:space="preserve">
    <value>Tier 1</value>
  </data>
  <data name="Tier2" xml:space="preserve">
    <value>Tier 2</value>
  </data>
  <data name="Tier3" xml:space="preserve">
    <value>Tier 3</value>
  </data>
  <data name="TroopRequest" xml:space="preserve">
    <value>Troop Request</value>
  </data>
  <data name="StartMessage" xml:space="preserve">
    <value>Click on Start to initialize the bot</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="LICENSE" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Assets\LICENSE;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="LabelMaxDonationsPerRequest" xml:space="preserve">
    <value>Max. troops per request:</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="OutputWelcomeMessage" xml:space="preserve">
    <value>====== Welcome to {0}! ======</value>
  </data>
  <data name="OutputBotIsStarting" xml:space="preserve">
    <value>Bot is starting...</value>
  </data>
  <data name="OutputBotIsStopping" xml:space="preserve">
    <value>Stopping bot execution...</value>
  </data>
  <data name="OutputBotStopped" xml:space="preserve">
    <value>Bot has stopped!</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="OutputBSNotFound" xml:space="preserve">
    <value>BlueStacks was not found!</value>
  </data>
  <data name="OutputBSApplyDimensionsError" xml:space="preserve">
    <value>Sorry, there was a problem while applying the registry entries!</value>
  </data>
  <data name="OutputBSApplyDimensionsIntoRegistry" xml:space="preserve">
    <value>Applying required registry entries...</value>
  </data>
  <data name="OutputBSNotRunningWithDimensions" xml:space="preserve">
    <value>BlueStacks is not set to 860x720!</value>
  </data>
  <data name="OutputTryingToLocateMainScreen" xml:space="preserve">
    <value>Trying to locate Main Screen</value>
  </data>
  <data name="LogBotInitialized" xml:space="preserve">
    <value>Bot fully Initialized!</value>
  </data>
  <data name="LogBotInitializing" xml:space="preserve">
    <value>Bot is initializing...</value>
  </data>
  <data name="Golems" xml:space="preserve">
    <value>Golems</value>
  </data>
  <data name="HogRiders" xml:space="preserve">
    <value>Hog Riders</value>
  </data>
  <data name="LavaHounds" xml:space="preserve">
    <value>Lava Hounds</value>
  </data>
  <data name="LocateDarkBarracksManually" xml:space="preserve">
    <value>Locate Dark Barracks Manually</value>
  </data>
  <data name="Minions" xml:space="preserve">
    <value>Minions</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Qty.</value>
  </data>
  <data name="Valkyries" xml:space="preserve">
    <value>Valkyries</value>
  </data>
  <data name="Witches" xml:space="preserve">
    <value>Witches</value>
  </data>
  <data name="Barrack1" xml:space="preserve">
    <value>Barrack 1</value>
  </data>
  <data name="LabelTroopCapacity" xml:space="preserve">
    <value>Troop Capacity:</value>
  </data>
  <data name="OutputBSAppliedDimensionsIntoRegistry" xml:space="preserve">
    <value>Registry settings changed!
You need to restart BlueStacks from the agent for changes to take effect!</value>
  </data>
  <data name="MinimizeToTray" xml:space="preserve">
    <value>Minimize to Tray</value>
  </data>
  <data name="NotificationRunningInTray" xml:space="preserve">
    <value>The bot will continue running on the system tray.
You can double click on the icon to show the window.</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="CannotHostBehaviorCollectionMultipleTimesExceptionMessage" xml:space="preserve">
    <value>Cannot set the same BehaviorCollection on multiple objects.</value>
  </data>
  <data name="CannotHostBehaviorMultipleTimesExceptionMessage" xml:space="preserve">
    <value>Cannot host an instance of a TriggerAction in multiple TriggerCollections simultaneously. Remove it from one TriggerCollection before adding it to another.</value>
  </data>
  <data name="CannotHostTriggerActionMultipleTimesExceptionMessage" xml:space="preserve">
    <value>Cannot host an instance of a TriggerAction in multiple TriggerCollections simultaneously. Remove it from one TriggerCollection before adding it to another.</value>
  </data>
  <data name="CannotHostTriggerCollectionMultipleTimesExceptionMessage" xml:space="preserve">
    <value>Cannot set the same TriggerCollection on multiple objects.</value>
  </data>
  <data name="CannotHostTriggerMultipleTimesExceptionMessage" xml:space="preserve">
    <value>An instance of a trigger cannot be attached to more than one object at a time.</value>
  </data>
  <data name="DefaultTriggerAttributeInvalidTriggerTypeSpecifiedExceptionMessage" xml:space="preserve">
    <value>"{0}" is not a valid type for the TriggerType parameter. Make sure "{0}" derives from TriggerBase.</value>
  </data>
  <data name="DuplicateItemInCollectionExceptionMessage" xml:space="preserve">
    <value>Cannot add the same instance of "{0}" to a "{1}" more than once.</value>
  </data>
  <data name="EventTriggerBaseInvalidEventExceptionMessage" xml:space="preserve">
    <value>The event "{0}" on type "{1}" has an incompatible signature. Make sure the event is public and satisfies the EventHandler delegate.</value>
  </data>
  <data name="EventTriggerCannotFindEventNameExceptionMessage" xml:space="preserve">
    <value>Cannot find an event named "{0}" on type "{1}".</value>
  </data>
  <data name="RetargetedTypeConstraintViolatedExceptionMessage" xml:space="preserve">
    <value>An object of type "{0}" cannot have a {3} property of type "{1}". Instances of type "{0}" can have only a {3} property of type "{2}".</value>
  </data>
  <data name="TypeConstraintViolatedExceptionMessage" xml:space="preserve">
    <value>Cannot attach type "{0}" to type "{1}". Instances of type "{0}" can only be attached to objects of type "{2}".</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="OutputHideBlueStacks" xml:space="preserve">
    <value>Hidding BlueStacks window...</value>
  </data>
  <data name="OutputRestoreBlueStacks" xml:space="preserve">
    <value>Restoring BlueStacks window...</value>
  </data>
  <data name="HideShowBlueStacks" xml:space="preserve">
    <value>Hide/Show BlueStacks</value>
  </data>
  <data name="StartStopBot" xml:space="preserve">
    <value>Start/Stop the Bot</value>
  </data>
  <data name="TakeSnapshotAllLoots" xml:space="preserve">
    <value>Take snapshot of all Loots</value>
  </data>
  <data name="TakeSnapshotAllTowns" xml:space="preserve">
    <value>Take snapshot of all Towns</value>
  </data>
  <data name="WaveSettings" xml:space="preserve">
    <value>Wave</value>
  </data>
  <data name="Waves" xml:space="preserve">
    <value>Waves</value>
  </data>
  <data name="AppTitleGeneral" xml:space="preserve">
    <value>[TBC] Clash of Clans Bot</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="DelayMilliseconds" xml:space="preserve">
    <value>Delay (ms)</value>
  </data>
  <data name="LabelDelay" xml:space="preserve">
    <value>Delay:</value>
  </data>
  <data name="LabelQuantity" xml:space="preserve">
    <value>Qty.:</value>
  </data>
  <data name="LabelTroop" xml:space="preserve">
    <value>Troop:</value>
  </data>
  <data name="RemoveSelectedWave" xml:space="preserve">
    <value>Remove Selected Wave</value>
  </data>
  <data name="Troop" xml:space="preserve">
    <value>Troop</value>
  </data>
  <data name="UseCustomWave" xml:space="preserve">
    <value>Use custom Waves</value>
  </data>
  <data name="LocateSettings" xml:space="preserve">
    <value>Locate</value>
  </data>
  <data name="DeployStrategyOneSide" xml:space="preserve">
    <value>Attack on a single side, penetrates through base</value>
  </data>
  <data name="TrainMode" xml:space="preserve">
    <value>Train Mode</value>
  </data>
  <data name="TrainModeMessage" xml:space="preserve">
    <value>Select your preferred troop training style from the combobox.</value>
  </data>
</root>